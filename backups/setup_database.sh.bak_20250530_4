#!/bin/bash

echo "Starting setup_database.sh logging at $(date)"
exec > >(tee -a /music_scheduler/logs/setup_database.log) 2>&1

echo "Debug: Logging initialized for setup_database.sh"

# Set MySQL root password and secure installation
echo "Setting MySQL root password and securing installation..."
mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'MusicU2025';"
mysql_secure_installation <<EOF

y
y
y
y
EOF

# Drop and recreate database
echo "Dropping and recreating database..."
mysql -uroot -pMusicU2025 -e "DROP DATABASE IF EXISTS musicu_db;"
mysql -uroot -pMusicU2025 -e "CREATE DATABASE musicu_db;"

# Create MySQL user
echo "Creating MySQL user..."
mysql -uroot -pMusicU2025 -e "CREATE USER 'musicu_user'@'localhost' IDENTIFIED BY 'MusicU2025';"
mysql -uroot -pMusicU2025 -e "GRANT ALL PRIVILEGES ON musicu_db.* TO 'musicu_user'@'localhost';"
mysql -uroot -pMusicU2025 -e "FLUSH PRIVILEGES;"

# Create database tables
echo "Creating database tables..."
mysql -umusicu_user -pMusicU2025 musicu_db <<EOF
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('admin', 'instructor') NOT NULL
);

CREATE TABLE students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    phone VARCHAR(255),
    instrument VARCHAR(255),
    created_by INT,
    FOREIGN KEY (created_by) REFERENCES users(id)
);

CREATE TABLE lessons (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT,
    instructor_id INT,
    lesson_date DATE NOT NULL,
    lesson_time TIME NOT NULL,
    duration INT NOT NULL,
    instrument VARCHAR(255) NOT NULL,
    reminder_enabled BOOLEAN DEFAULT FALSE,
    notes TEXT,
    FOREIGN KEY (student_id) REFERENCES students(id),
    FOREIGN KEY (instructor_id) REFERENCES users(id)
);

CREATE TABLE instructor_availability (
    id INT AUTO_INCREMENT PRIMARY KEY,
    instructor_id INT,
    day_of_week ENUM('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday') NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    FOREIGN KEY (instructor_id) REFERENCES users(id)
);

CREATE TABLE instructor_time_off (
    id INT AUTO_INCREMENT PRIMARY KEY,
    instructor_id INT,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    FOREIGN KEY (instructor_id) REFERENCES users(id)
);

CREATE TABLE instructor_instruments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    instructor_id INT,
    instrument VARCHAR(255) NOT NULL,
    FOREIGN KEY (instructor_id) REFERENCES users(id)
);
EOF

# Hash passwords for initial users
echo "Hashing passwords for initial users..."
SALT=$(python3 -c "import bcrypt; print(bcrypt.gensalt().decode('utf-8'))")
echo "Fixed salt used: $SALT"
ADMIN_HASH=$(python3 -c "import bcrypt; print(bcrypt.hashpw(b'MusicU2025', b'$SALT').decode('utf-8'))")
echo "Hashed password for admin: $ADMIN_HASH"
INSTRUCTOR_HASH=$(python3 -c "import bcrypt; print(bcrypt.hashpw(b'MusicU2025', b'$SALT').decode('utf-8'))")
echo "Hashed password for instructor1: $INSTRUCTOR_HASH"

# Insert initial users
mysql -umusicu_user -pMusicU2025 musicu_db <<EOF
INSERT INTO users (username, password, role) VALUES ('admin', '$ADMIN_HASH', 'admin');
INSERT INTO users (username, password, role) VALUES ('instructor1', '$INSTRUCTOR_HASH', 'instructor');
EOF

# Verify initial data
echo "Verifying initial data..."
mysql -umusicu_user -pMusicU2025 musicu_db -e "SELECT username, role FROM users;"

echo "Database setup complete! Check the setup log for details: cat /music_scheduler/logs/setup_database.log"
